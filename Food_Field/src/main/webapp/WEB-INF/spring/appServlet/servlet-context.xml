<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		 http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.2.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<context:annotation-config/>
	
	<context:component-scan base-package="org.kdea.main" />
	<context:component-scan base-package="org.kdea.freeboard" />
	<context:component-scan base-package="org.kdea.noticeboard" />
	<context:component-scan base-package="org.kdea.reviewboard" />
	<context:component-scan base-package="org.kdea.qnaboard" />
	<context:component-scan base-package="org.kdea.login" />
	<context:component-scan base-package="org.kdea.join" />
	<context:component-scan base-package="org.kdea.vo" />
	
    <!-- Enables the Spring MVC @Controller programming model -->
    <mvc:annotation-driven />
    
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="contentType" value="text/html; charset=UTF-8"/>
        <beans:property name="order" value="2"/>
	</beans:bean>
	
	 <beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="mapperLocations" value="classpath:org/kdea/**/*.xml" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg index="0" ref="sqlSessionFactory" />
	</beans:bean> 

	<beans:bean id="dataSource" class="oracle.jdbc.pool.OracleDataSource">
		<beans:property name="dataSourceName" value="ds" />
		<beans:property name="URL"
			value="jdbc:oracle:thin:@localhost:1521:xe" />
		<beans:property name="user" value="scott" />
		<beans:property name="password" value="TIGER" />
	</beans:bean>
	<!-- 타일즈 뷰 리졸버 선언 -->
	<beans:bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass">
			<beans:value>
				org.springframework.web.servlet.view.tiles3.TilesView
			</beans:value>
		</beans:property>
		<beans:property name="order" value="1" />
	</beans:bean>
	 
	<!-- Tiles configuration -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/tiles/tiles-definitions.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>


	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	<beans:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"  />
</beans:beans>
